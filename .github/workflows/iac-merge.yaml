name: Terragrunt merge workflow

on:
  pull_request:
    paths:
      - 'iac/envs/caladan/**/*.hcl'   # all .hcl files under iac/envs/caladan
      - 'iac/_components/**'          # all files under iac/_components
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Terragrunt action to run'
        required: false
        default: 'apply'
        type: choice
        options:
          - apply
          - plan
          - destroy
      resource:
        description: 'Resource to apply'
        required: false
        default: ""
        type: choice
        options:
          - ""
          - current-public-ip
          - server-1
          - server-2
          - vpc
          - ip-fetcher

jobs:
  terragrunt-merge:
    runs-on: ubuntu-latest
    environment: aws
    steps:
      - uses: actions/checkout@v4

      # 1️⃣ Configure AWS credentials (access key + secret key)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Set Terragrunt variables
        run: |
          echo 'TG_DIR=./iac/envs/caladan/${{ github.event.inputs.resource }}' >> $GITHUB_ENV
          echo 'TG_ACTION="run --all ${{ github.event.inputs.action }}"' >> $GITHUB_ENV

      # 2️⃣ Run Terragrunt merge
      - name: Run Terragrunt Apply
        uses: gruntwork-io/terragrunt-action@v3
        with:
          tg_dir: ${{ env.TG_DIR }}
          tg_command: ${{ env.TG_ACTION }}
          tg_add_approve: '1'       # add --auto-approve
          tg_version: '0.86.2'
          tofu_version: '1.6.0'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
